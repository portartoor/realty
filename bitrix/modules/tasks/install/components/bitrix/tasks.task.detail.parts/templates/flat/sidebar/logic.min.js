BX.namespace("Tasks.Component");(function(){if(typeof BX.Tasks.Component.TaskViewSidebar!="undefined"){return}BX.Tasks.Component.TaskViewSidebar=function(t){this.layout={};this.parameters=t||{};this.taskId=this.parameters.taskId;this.messages=this.parameters.messages||{};this.workingTime=this.parameters.workingTime||{start:{hours:0,minutes:0},end:{hours:0,minutes:0}};this.can=this.parameters.can||{};this.allowTimeTracking=this.parameters.allowTimeTracking===true;this.user=this.parameters.user||{};this.isAmAuditor=this.parameters.iAmAuditor;this.auditorCtrl=null;this.pathToTasks=this.parameters.pathToTasks;this.initDeadline();this.initReminder();this.initMark();this.initTime();this.initTags();this.initAuditorThing();BX.addCustomEvent(window,"tasksTaskEvent",BX.delegate(this.onTaskEvent,this))};BX.Tasks.Component.TaskViewSidebar.prototype.initAuditorThing=function(){if(!this.can.EDIT){BX.Tasks.Util.Dispatcher.find("auditor-selector").then(function(t){this.auditorCtrl=t;t.bindControl("header-button","click",this.onToggleImAuditor.bind(this))}.bind(this))}};BX.Tasks.Component.TaskViewSidebar.prototype.onToggleImAuditor=function(){if(this.isAmAuditor){BX.Tasks.confirm(BX.message("TASKS_TTDP_TEMPLATE_USER_VIEW_LEAVE_AUDITOR_CONFIRM")).then(function(){this.syncAuditor()}.bind(this))}else{this.syncAuditor()}};BX.Tasks.Component.TaskViewSidebar.prototype.syncAuditor=function(){var t=this.taskId;var e=new BX.Tasks.Util.Query;e.run("task."+(this.isAmAuditor?"leaveauditor":"enterauditor"),{id:t}).then(function(t){if(t.isSuccess()){this.user.entityType="U";if(this.isAmAuditor){this.auditorCtrl.deleteItem(this.user)}else{this.auditorCtrl.addItem(this.user)}this.isAmAuditor=!this.isAmAuditor;this.auditorCtrl.setHeaderButtonLabelText(this.isAmAuditor?BX.message("TASKS_TTDP_TEMPLATE_USER_VIEW_LEAVE_AUDITOR"):BX.message("TASKS_TTDP_TEMPLATE_USER_VIEW_ENTER_AUDITOR"))}}.bind(this));e.run("task.checkcanread",{id:t}).then(function(t){if(t.isSuccess()){var e=t.getData();if(!e.READ){if(this.pathToTasks){window.document.location=this.pathToTasks}else{BX.reload()}}}}.bind(this));e.execute()};BX.Tasks.Component.TaskViewSidebar.prototype.onTaskEvent=function(t,e){e=e||{};var i=e.task||{};if(t=="UPDATE"&&i.ID==this.parameters.taskId){if(BX.type.isNotEmptyString(i.REAL_STATUS)&&BX.type.isNotEmptyString(i.STATUS_CHANGED_DATE)){this.setStatus(i.REAL_STATUS,i.STATUS_CHANGED_DATE)}}};BX.Tasks.Component.TaskViewSidebar.prototype.setStatus=function(t,e){var i=BX("task-detail-status-name");var a=BX("task-detail-status-date");i.innerHTML=BX.message("TASKS_STATUS_"+t);a.innerHTML=(t!=4&&t!=5?BX.message("TASKS_SIDEBAR_START_DATE")+" ":"")+BX.util.htmlspecialchars(e)};BX.Tasks.Component.TaskViewSidebar.prototype.initDeadline=function(){this.deadline=BX.type.isNotEmptyString(this.parameters.deadline)?this.parameters.deadline:"";this.layout.deadline=BX("task-detail-deadline");this.layout.deadlineClear=BX("task-detail-deadline-clear");if(!this.layout.deadline){return}BX.bind(this.layout.deadline,"click",BX.proxy(this.onDeadlineClick,this));BX.bind(this.layout.deadlineClear,"click",BX.proxy(this.clearDeadline,this))};BX.Tasks.Component.TaskViewSidebar.prototype.onDeadlineClick=function(t){var e=new Date;var i=new Date(Date.UTC(e.getFullYear(),e.getMonth(),e.getDate(),this.workingTime.end.hours,this.workingTime.end.minutes));BX.calendar({node:this.layout.deadline,field:"",form:"",bTime:true,value:this.deadline?this.deadline:i,bHideTimebar:false,callback_after:BX.proxy(function(t,e){this.setDeadline(t)},this)})};BX.Tasks.Component.TaskViewSidebar.prototype.setDeadline=function(t){this.deadline=BX.calendar.ValueToString(t,true,false);this.layout.deadline.innerHTML=BX.date.format(BX.date.convertBitrixFormat(BX.message("FORMAT_DATETIME").replace(":SS","").replace("/SS","")),t,null,false);this.layout.deadlineClear.style.display="";this.updateDeadline()};BX.Tasks.Component.TaskViewSidebar.prototype.clearDeadline=function(){this.deadline="";this.layout.deadline.innerHTML=this.messages.emptyDeadline;this.layout.deadlineClear.style.display="none";this.updateDeadline()};BX.Tasks.Component.TaskViewSidebar.prototype.updateDeadline=function(){var t=new BX.Tasks.Util.Query;t.add("task.update",{id:this.taskId,data:{DEADLINE:this.deadline}},{},BX.delegate(function(){BX.onCustomEvent(window,"tasksTaskEventChangeDeadline",[this.taskId,this.deadline]);BX.Tasks.Util.fireGlobalTaskEvent("UPDATE",{ID:this.taskId},{STAY_AT_PAGE:true},{id:this.taskId,deadline:this.deadline})},this));t.execute()};BX.Tasks.Component.TaskViewSidebar.prototype.addReminder=function(){BX.onCustomEvent(window,"tasksTaskEventAddReminder",[this.layout.reminderAdd])};BX.Tasks.Component.TaskViewSidebar.prototype.initReminder=function(){this.layout.reminderAdd=BX("task-detail-reminder-add");BX.bind(this.layout.reminderAdd,"click",BX.delegate(this.addReminder,this))};BX.Tasks.Component.TaskViewSidebar.prototype.initMark=function(){if(!this.can["EDIT"]){return}this.mark=this.parameters.mark||"NULL";this.layout.mark=BX("task-detail-mark");if(this.layout.mark){BX.bind(this.layout.mark,"click",BX.proxy(this.onMarkClick,this))}};BX.Tasks.Component.TaskViewSidebar.prototype.onMarkClick=function(){BX.TaskGradePopup.show(this.taskId,this.layout.mark,{listValue:this.mark},{events:{onPopupChange:BX.proxy(this.onMarkChange,this)}})};BX.Tasks.Component.TaskViewSidebar.prototype.onMarkChange=function(){var t=BX.proxy_context;this.layout.mark.className="task-detail-sidebar-item-mark-"+t.listValue.toLowerCase();this.layout.mark.innerHTML=t.listItem.name;var e=new BX.Tasks.Util.Query;e.add("task.update",{id:this.taskId,data:{MARK:t.listValue==="NULL"?"":t.listValue}});e.execute()};BX.Tasks.Component.TaskViewSidebar.prototype.initTime=function(){if(!this.allowTimeTracking){return}BX.Tasks.Util.Dispatcher.bindEvent("buttons-dayplan","task-timer-tick",BX.delegate(this.onTaskTimerTick,this))};BX.Tasks.Component.TaskViewSidebar.prototype.onTaskTimerTick=function(t,e){if(t!=this.taskId){return}var i=BX("task-detail-spent-time-"+this.taskId);if(i){i.innerHTML=BX.Tasks.Util.formatTimeAmount(e)}};BX.Tasks.Component.TaskViewSidebar.prototype.initTags=function(){BX.addCustomEvent("onTaskTagSelect",BX.proxy(this.saveTags,this))};BX.Tasks.Component.TaskViewSidebar.prototype.saveTags=function(t){var e="";for(var i=0,a=t.length;i<a;i++){if(i>0){e+=", "}e+=t[i].name}var s=new BX.Tasks.Util.Query;s.add("task.update",{id:this.taskId,data:{TAGS:e}});s.execute()}}).call(this);
//# sourceMappingURL=logic.map.js